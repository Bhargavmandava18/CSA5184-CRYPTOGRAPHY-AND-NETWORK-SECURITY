def encrypt_vigenere(plaintext, key_stream):
    ciphertext = ""
    key_stream_index = 0
    
    for char in plaintext:
        if char.isalpha():
            shift = ord(key_stream[key_stream_index % len(key_stream)]) - ord('A')
            if char.isupper():
                encrypted_char = chr(((ord(char) - ord('A') + shift) % 26) + ord('A'))
            else:
                encrypted_char = chr(((ord(char) - ord('a') + shift) % 26) + ord('a'))
            ciphertext += encrypted_char
            key_stream_index += 1
        else:
            ciphertext += char
    
    return ciphertext

def decrypt_vigenere(ciphertext, key_stream):
    decrypted_text = ""
    key_stream_index = 0
    
    for char in ciphertext:
        if char.isalpha():
            shift = ord(key_stream[key_stream_index % len(key_stream)]) - ord('A')
            if char.isupper():
                decrypted_char = chr(((ord(char) - ord('A') - shift + 26) % 26) + ord('A'))
            else:
                decrypted_char = chr(((ord(char) - ord('a') - shift + 26) % 26) + ord('a'))
            decrypted_text += decrypted_char
            key_stream_index += 1
        else:
            decrypted_text += char
    
    return decrypted_text

def main():
    plaintext = "send more money"
    key_stream = "9017231521141128"  # Random key stream
    
    encrypted_text = encrypt_vigenere(plaintext, key_stream)
    print("Encrypted Text:", encrypted_text)
    
    target_ciphertext = "cash not needed"
    recovered_key = []
    
    for i in range(len(target_ciphertext)):
        shift = (ord(target_ciphertext[i]) - ord(encrypted_text[i]) + 26) % 26
        recovered_key.append(chr(shift + ord('A')))
    
    print("Recovered Key:", "".join(recovered_key))
    
    decrypted_text = decrypt_vigenere(encrypted_text, "".join(recovered_key))
    print("Decrypted Text:", decrypted_text)

if __name__ == "__main__":
    main()
